# Your workflow name.
name: Deploy to heroku.

# Run workflow on every push to main branch.
on:
  push:
    branches: [main]
  workflow_dispatch:
    

# Your workflows jobs.
jobs:
    setup:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.9]

      steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  
      # - name: Install Dependencies 
      #   run: |
      #     python -m pip install --upgrade pip
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #     python main.py
      
  
    Test-pipeline-locally:
      runs-on: ubuntu-latest
      needs: [setup]
      steps:
        - name: Check the Python Version 
          run: |
           python --version 
        - name: check out the code 
          uses: actions/checkout@v2

        - name: Run pipeline locally 
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            python main.py
    Test-application-locally:
      runs-on: ubuntu-latest
      needs: [Test-pipeline-locally]
      steps:
        - name: Check the Python Version 
          run: |
           python --version 
        - name: check out the code 
          uses: actions/checkout@v2

        - name: Run and Application Locally
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            gunicorn --workers=4 --bind 127.0.0.1:5000 app:app &
            sleep 10
            curl http://127.0.0.1:5000/

    Dockerize:
      runs-on: ubuntu-latest
      needs: [Test-application-locally]
      steps:
      -
          name: Checkout
          uses: actions/checkout@v4
      -
          name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
      -
          name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/mlapp:latest
      - 
        name: Run docker Image ${{ secrets.DOCKERHUB_USERNAME }}/mlapp:latest
        run: |
          docker run -d -p 5000:5000 --name=mlapp ${{ secrets.DOCKERHUB_USERNAME }}/mlapp:latest 
          docker exec -it mlapp bash -c "python main.py" 
          sleep 10 
          curl http://127.0.0.1:5000/
